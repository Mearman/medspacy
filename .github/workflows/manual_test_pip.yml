name: manual_test_pip

on:
  workflow_dispatch:
    inputs:
      install_prerelease:
        description: 'Check this to install the prerelease version of medspacy if available and the version is newer than formal release.'  
        type: boolean   
        required: false
        default: false

jobs:

  test_win_linux_mac:
  
    # TODO: Do we care if this only runs on allowed branches since we check push/pull_request above?
    #if: github.ref == 'refs/heads/master' OR github.ref == 'refs/heads/develop'

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10.x", "3.11.x"]
        # revised from https://github.com/actions/cache/blob/main/examples.md#python---pip
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Git clone repo and remove source code
      run: |
        pwd
        ls
        # remove cloned source code to ensure test on installed medspacy
        python -c "import shutil;shutil.rmtree('medspacy')"
        ls
    
    - uses: actions/cache@v3
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install formally released medspacy
      uses: actions/setup-python@v4
      if: not ${{ github.event.inputs.install_prerelease }}
      with:
        python-version: ${{ matrix.python-version }}  
    - run: |
        python --version
        pip install --upgrade pip
        pip install medspacy
    
    - name: Install prereleased medspacy
      uses: actions/setup-python@v4
      if: ${{ github.event.inputs.install_prerelease }}
      with:
        python-version: ${{ matrix.python-version }}  
    - run: |
        python --version
        pip install --upgrade pip
        pip install --pre medspacy

    - name: Set up Python ${{ matrix.python-version }}  ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}   
        cache: 'pip'   
        cache-dependency-path: 'requirements/requirements_tests.txt'
    - run: |
        pip install --use-pep517 -r requirements/requirements_tests.txt
        python -m spacy download de_core_news_sm
        python -m spacy download en_core_web_sm
        python -m spacy download en_core_web_md
        # multilingual models for testing compatibility
        python -m spacy download es_core_news_sm
        python -m spacy download pl_core_news_sm
        python -m spacy download de_core_news_sm
        python -m spacy download xx_ent_wiki_sm
    
    - name: Test with pytest
      # need to run pytest after a clean pip install to 100% replicate the users' environment
      run: |        
        pytest
